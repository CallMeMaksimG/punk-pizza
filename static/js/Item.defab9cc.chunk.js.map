{"version":3,"file":"static/js/Item.defab9cc.chunk.js","mappings":"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","sources":["pages/Item.tsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useAppDispatch } from '../redux/store';\nimport { selectCartItemByIdAndSize } from '../redux/cart/selectors';\nimport { ICartItem } from '../redux/cart/types';\nimport { addItem, minusItem, removeItem } from '../redux/cart/slice';\nimport Loader from '../components/Loader/Loader';\n\nconst sizeValues = [20, 30];\n\nconst Item: React.FC = function () {\n    const dispatch = useAppDispatch();\n    const [item, setItem] = useState<{\n        id: string;\n        img: string;\n        title: string;\n        description: string;\n        weight: number[];\n        price: number[];\n        sizes: number[];\n    }>();\n\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [activeSize, setActiveSize] = useState(0);\n    const cartItem = useSelector(\n        selectCartItemByIdAndSize(id ?? '', sizeValues[activeSize])\n    );\n    const addedCount = cartItem ? cartItem.count : 0;\n\n    const onClickSize = (index: number) => {\n        setActiveSize(index);\n    };\n    useEffect(() => {\n        async function fetchItems() {\n            try {\n                const { data } = await axios.get(\n                    `https://657421eff941bda3f2af644e.mockapi.io/items/${id}`\n                );\n                setItem(data);\n            } catch (error) {\n                alert('Ошибка при получении данных');\n                console.log(error);\n                navigate('/');\n            }\n        }\n        fetchItems();\n    }, []);\n\n    const onClickAdd = () => {\n        if (item) {\n            if (item.sizes) {\n                const itemData: ICartItem = {\n                    id: item.id,\n                    img: item.img,\n                    title: item.title,\n                    weight: item.weight[activeSize],\n                    price: item.price[activeSize],\n                    size: item.sizes[activeSize],\n                    count: 0,\n                    description: item.description,\n                };\n                dispatch(addItem(itemData));\n            } else {\n                const itemData = {\n                    id: item.id,\n                    img: item.img,\n                    title: item.title,\n                    weight: item.weight[activeSize],\n                    price: item.price[activeSize],\n                    count: 0,\n                    description: item.description,\n                };\n                dispatch(addItem(itemData as ICartItem));\n            }\n        }\n    };\n\n    const onClickMinus = () => {\n        const count = cartItem?.count;\n        const id = cartItem?.id;\n        const size = cartItem?.size;\n        const price = cartItem?.price;\n\n        if (count && count > 1) {\n            dispatch(\n                minusItem({\n                    id,\n                    size,\n                    price,\n                } as ICartItem)\n            );\n        } else {\n            dispatch(removeItem({ id, size, price } as ICartItem));\n        }\n    };\n\n    if (!item) {\n        return <Loader />;\n    }\n    return (\n        <div className=\"item\">\n            <div className=\"container\">\n                <Link to=\"/\">\n                    <button className=\"item__prev-btn\">\n                        <img\n                            src=\"./../../img/icons/arrow-prev.svg\"\n                            alt=\"arrow-prev\"\n                        />\n                    </button>\n                </Link>\n                <div className=\"item__wrapper\">\n                    <div className=\"item__img\">\n                        <img src={item.img} alt=\"\" />\n                    </div>\n                    <div className=\"item__info\">\n                        <h1 className=\"item__title\">{item.title}</h1>\n                        <p className=\"item__weight\">\n                            {item.weight[activeSize]}г\n                        </p>\n                        <p className=\"item__description\">{item.description}</p>\n                        <div className=\"item__size\">\n                            {item.sizes && (\n                                <ul className=\"item__size-list\">\n                                    {item.sizes?.map((size, index) => {\n                                        return (\n                                            <li\n                                                key={index}\n                                                onClick={() =>\n                                                    onClickSize(index)\n                                                }\n                                                className={\n                                                    activeSize === index\n                                                        ? 'item__size-list-item item__size-list-item--active'\n                                                        : 'item__size-list-item'\n                                                }\n                                            >\n                                                {size} см\n                                            </li>\n                                        );\n                                    })}\n                                </ul>\n                            )}\n                        </div>\n                        <div className=\"item__footer\">\n                            <p className=\"item__price\">\n                                {item.price[activeSize]} &#8381;\n                            </p>\n                            {(addedCount > 0 &&\n                                cartItem?.size === sizeValues[activeSize]) ||\n                            addedCount > 0  ? (\n                                <div className=\"item__add-btn--active\">\n                                    <button onClick={onClickMinus}>\n                                        <img\n                                            src=\"./../../img/icons/minus.svg\"\n                                            alt=\"minus\"\n                                        />\n                                    </button>\n                                    {addedCount}\n                                    <button onClick={onClickAdd}>\n                                        <img\n                                            src=\"./../../img/icons/plus.svg\"\n                                            alt=\"add to cart\"\n                                        />\n                                    </button>\n                                </div>\n                            ) : (\n                                <button\n                                    className=\"item__add-btn\"\n                                    onClick={onClickAdd}\n                                >\n                                    <img\n                                        src=\"./../../img/icons/plus.svg\"\n                                        alt=\"add to cart\"\n                                    />\n                                </button>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Item;\n"],"names":["sizeValues","_item$sizes","dispatch","useAppDispatch","item","setItem","useState","id","useParams","navigate","useNavigate","activeSize","setActiveSize","cartItem","useSelector","selectCartItemByIdAndSize","addedCount","count","useEffect","async","data","axios","get","concat","error","alert","console","log","fetchItems","onClickAdd","sizes","itemData","img","title","weight","price","size","description","addItem","_jsx","className","children","_jsxs","Link","to","src","alt","map","index","onClick","onClickSize","onClickMinus","minusItem","removeItem","Loader"],"sourceRoot":""}